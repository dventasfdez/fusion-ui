import { CheckboxInput, FileUploader, Form, NumberInput, RadioInput, SelectFilter, SelectInput, SwitchInput, TextArea, TextInput, Option } from "@/components/forms";
import DateInput from "@/components/forms/date-input";
import SearchInput from "@/components/forms/search-input";
import { min, max, maxLength, required } from "@/components/forms/utilities/validations";
import Modal, { ModalBody } from "@/components/modal/modal";
import Head from "next/head";
import { LegacyRef, createRef, useRef } from "react";

export default function Home() {
  const formValues = { checkbox: true };
  const formRef: any = createRef();
  const onChange = async (event: any) => {
    const _form = formRef.current as Form;
    const values_react = _form.serialize(); //you can exclude the empty values adding "true" as parameter
    console.info("Input changed", values_react);
  };
  return (
    <>
      <Head>
        <title>Step One</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/ust.svg" />
      </Head>
      <main className="stepone-ui">
        <Form
          ref={formRef}
          debounceTimer={0}
          values={{ color: ["Pink", "Orange"] }}
          // onSubmit={handleSubmitVerbose}
          onChange={onChange}
        >
          <DateInput label="date" id="56" placeholder="enabled" name="date" type="text" validateOnChange={true} />
          <DateInput mode="multiple" label="date" id="56" placeholder="enabled" name="date" type="text" validateOnChange={true} />
          <DateInput mode="range" range label="date" id="56" placeholder="enabled" name="date" type="text" validateOnChange={true} />
          <SearchInput id="56" placeholder="enabled" name="search" type="text" validateOnChange={true} />
          <SearchInput small id="56" placeholder="enabled" name="search_small" type="text" validateOnChange={true} className="mt3" />
          <TextInput id="1" icon="face" validations={[required]} label="Text input" placeholder="enabled" name="textInput" type="text" validateOnChange={true} />
          <TextInput id="2" validations={[required]} label="Text input" placeholder="enabled" name="textInput" type="text" validateOnChange={true} />
          <TextInput id="3" icon="face" large validations={[required]} label="Text input" placeholder="enabled" name="textInput" type="text" validateOnChange={true} />
          <TextInput id="4" large validations={[required]} label="Text input" placeholder="enabled" name="textInput" type="text" validateOnChange={true} />
          <TextInput id="5" icon="face" disabled validations={[required]} label="Text input" placeholder="enabled" name="textInput" type="text" validateOnChange={true} />
          <TextInput id="6" disabled validations={[required]} label="Text input" placeholder="enabled" name="textInput" type="text" validateOnChange={true} />
          <TextInput
            id="7"
            icon="face"
            large
            disabled
            validations={[required]}
            label="Nested props example"
            placeholder="enabled"
            name="nestedObject[0].property"
            type="text"
            validateOnChange={true}
          />
          <TextInput id="8" large disabled validations={[required]} label="Nested props example" placeholder="enabled" name="nestedObject[0].property" type="text" validateOnChange={true} />

          <NumberInput id="9" validations={[required, min(5), max(10)]} label="Number input" placeholder="enabled" name="numberInput" validateOnChange={true} />
          <TextArea id="10" validations={[required, maxLength(250)]} maxLength={250} label="Textarea" placeholder="example" name="textarea" type="text" />
          <SelectInput id="a" label="Select" name="myselect" validations={[required]} multiple>
            <option value="">Select</option>
            <option value="1">Select value 1</option>
            <option value="2">Select value 1</option>
            <option value="3">Select value 1</option>
          </SelectInput>
          <fieldset>
            <CheckboxInput
              id="11"
              validations={[required]}
              name="checkboxName"
              label={() => (
                <>
                  This is a checkbox with a link <a href="google.com">asdasd</a>
                </>
              )}
              value="value1"
            />
            <CheckboxInput id="12" validations={[required]} name="checkboxName" label="checkbox 1" value="value2" />
            <CheckboxInput id="13" validations={[required]} name="checkboxName" label="checkbox 2" value="value 3" />
          </fieldset>
          <fieldset>
            <RadioInput id="14" validations={[required]} name="radio" label="Radio 1" value="value 1" />
            <RadioInput id="15" validations={[required]} name="radio" label="Radio 2" value="value 2" disabled />
          </fieldset>
          <SelectFilter showSelectAllOption={true} tooltip="tooltip example" label="Select Colour (multiple)" validations={[required]} multiple={true} name="color">
            <Option value="Red" label="Red" />
            <Option value="Yellow" label="Yellow" />
            <Option value="Orange" label="Orange" />
            <Option value="Pink" label="Pink" />
            <Option value="Purple" label="Purple" />
          </SelectFilter>
          <SelectFilter showSelectAllOption={true} tooltip="tooltip example" label="Select Colour (multiple)" validations={[required]} multiple={true} name="color" disabled>
            <Option value="Red" label="Red" />
            <Option value="Yellow" label="Yellow" />
            <Option value="Orange" label="Orange" />
            <Option value="Pink" label="Pink" />
            <Option value="Purple" label="Purple" />
          </SelectFilter>
          {/* <Wysiwyg label="Job description" tooltip="Add here a description of the job position" validations={[required]} name="exampleWysiwig" bold italic unorderedList orderedList />
           */}
          <SwitchInput id="input" validations={[required]} name="accepttermsandconditions" label="Do you agree with the terms and conditios?" value="true" helperTextDescription="hola" />
          <SwitchInput id="input" small validations={[required]} name="accepttermsandconditions" label="Do you agree with the terms and conditios?" value="true" />

          <FileUploader name="fileuploaderddsingle" validations={[required]} dragAndDrop label="Upload files with drag & drop single" acceptFormat="application/vnd.ms-excel, application/pdf" />

          <input type="submit" value="Submit" />
        </Form>
        {/* <div className="g-container_12">
          <div className="g-item_4 g-item-tablet_2 g-item-mobile_1">
            <h3 className="mb2">Default button style</h3>
            <div style={{ display: "flex", flexWrap: "wrap" }}>
              <input type="button" value="Button" className="mr1 mb1" />
              <input type="submit" value="Submit" className="mr1 mb1" />
              <button className="button mr1 mb1">
                <span className="material-icons left">emoji_emotions</span> Button with icon
              </button>
              <button className="button mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>

              <input type="button" value="Small button" className="small mr1 mb1" />
              <button className="button small mr1 mb1">
                <span className="material-icons left">emoji_emotions</span> Button with icon
              </button>
              <button className="button small mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button small mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>

              <input type="button" value="Large button" className="large mr1 mb1" />
              <button className="button large mr1 mb1">
                <span className="material-icons left">emoji_emotions</span> Button with icon
              </button>
              <button className="button large mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button large mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>
            </div>
          </div>

          <div className="g-item_4 g-item-tablet_2 g-item-mobile_1">
            <h3 className="mb2">Primary button style</h3>
            <div style={{ display: "flex", flexWrap: "wrap" }}>
              <input type="button" value="Button" className="button-primary mr1 mb1" />
              <input type="submit" value="Submit" className="button-primary mr1 mb1" />
              <button className="button-primary mr1 mb1">
                <span className="material-icons left">emoji_emotions</span> Button with icon
              </button>
              <button className="button-primary mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button-primary mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>

              <input type="button" value="Small button" className="button-primary small mr1 mb1" />
              <button className="button-primary small mr1 mb1">
                <span className="material-icons left">emoji_emotions</span> Button with icon
              </button>
              <button className="button-primary small mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button-primary small mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>

              <input type="button" value="Large button" className="button-primary large mr1 mb1" />
              <button className="button-primary large mr1 mb1">
                <span className="material-icons left">emoji_emotions</span> Button with icon
              </button>
              <button className="button-primary large mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button-primary large mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>
            </div>
          </div>
          <div className="g-item_4 g-item-tablet_2 g-item-mobile_1">
            <h3 className="mb2">Secondary button style</h3>
            <div style={{ display: "flex", flexWrap: "wrap" }}>
              <input type="button" value="Button" className="button-secondary mr1 mb1" />
              <input type="submit" value="Submit" className="button-secondary mr1 mb1" />
              <button className="button-secondary mr1 mb1">
                <span className="material-icons left"> emoji_emotions</span> Button with icon
              </button>
              <button className="button-secondary mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button-secondary mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>

              <input type="button" value="Small button" className="button-secondary small mr1 mb1" />
              <button className="button-secondary small mr1 mb1">
                <span className="material-icons left"> emoji_emotions</span> Button with icon
              </button>
              <button className="button-secondary small mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button-secondary small mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>

              <input type="button" value="Large button" className="button-secondary large mr1 mb1" />
              <button className="button-secondary large mr1 mb1">
                <span className="material-icons left"> emoji_emotions</span> Button with icon
              </button>
              <button className="button-secondary large mr1 mb1">
                <span className="material-icons">emoji_emotions</span>
              </button>
              <button className="button-secondary large mr1 mb1">
                Button with icon <span className="material-icons right">emoji_emotions</span>
              </button>
            </div>
          </div>
        </div> */}
      </main>
    </>
  );
}
